{
  "name": "eod-service",
  "imageType": "IMAGE",
  "parent": "openjdk:11-jre-slim",
  "maintainerEmail": "oleksandr.berezovskyi@ihsmarkit.com",
  "copyPaths": {
    "build/libs/": "/opt/app/",
    "entrypoint.sh": "/opt/app/"
  },
  "run": [
    "for i in $(ls /opt/app | egrep '.*-(tests|sources|javadoc).jar$'); do rm -f /opt/app/$i; done",
    "mv `ls /opt/app/*.jar` $(echo `ls /opt/app/*.jar` | sed -En s/-[0-9]+\\.[0-9]+\\.[0-9]+\\(-SNAPSHOT\\)?.jar//p).jar"
  ],
  "entrypoint": "/opt/app/entrypoint.sh",
  "containerConfig": {
    "kind": "ContainerConfig",
    "apiVersion": "v2",
    "deployment": {
      "imageName": "eod-service",
      "imageNamespace": "mcp-tfx-clearing",
      "loadBalanced": true,
      "replicas": 1,
      "routes": [
      ]
    },
    "spec": {
      "serviceAccount": "tfx-clearing-systemuser",
      "volumes": [
        {
          "name": "logs-storage",
          "persistentVolumeClaim": {
            "claimName": "${KUBERNETES_NAMESPACE}-diagnostics"
          }
        }
      ],
      "container": {
        "args": [],
        "command": [],
        "env": [
          {
            "name": "KUBERNETES_NAMESPACE",
            "valueFrom": {
              "fieldRef": {
                "fieldPath": "metadata.namespace"
              }
            }
          },
          {
            "name": "JAVA_APP_JAR",
            "value": "eod-service.jar"
          },
          {
            "name": "DB_URL",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "tfx.db.url"
              }
            }
          },
          {
            "name": "DB_USER",
            "valueFrom": {
              "secretKeyRef": {
                "name": "db-user",
                "key": "username"
              }
            }
          },
          {
            "name": "DB_PASSWORD",
            "valueFrom": {
              "secretKeyRef": {
                "name": "db-user",
                "key": "password"
              }
            }
          },
          {
            "name": "DB_SCHEMA",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "tfx.db.schema"
              }
            }
          },
          {
            "name": "AMQ_URL",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "tfx.amq.url"
              }
            }
          },
          {
            "name": "AMQ_USER",
            "valueFrom": {
              "secretKeyRef": {
                "name": "amq-user",
                "key": "username"
              }
            }
          },
          {
            "name": "AMQ_PASSWORD",
            "valueFrom": {
              "secretKeyRef": {
                "name": "amq-user",
                "key": "password"
              }
            }
          },
          {
            "name": "ENV",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "environment.name"
              }
            }
          },
          {
            "name": "SERVER_TIME_ZONE",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "server.timezone"
              }
            }
          },
          {
            "name": "EOD1_JOB_ENABLED",
            "valueFrom": {
              "configMapKeyRef": {
                "name": "environment-config",
                "key": "eod1.job.enabled"
              }
            }
          }
        ],
        "readinessProbe": {
          "httpGet": {
            "path": "/actuator/health",
            "port": 8443
          },
          "initialDelaySeconds": 20,
          "timeoutSeconds": 5
        },
        "ports": [
          {
            "containerPort": 8443,
            "name": "http"
          }
        ],
        "resources": {
        },
        "volumeMounts": [
          {
            "name": "logs-storage",
            "mountPath": "/logs"
          }
        ]
      }
    }
  }
}